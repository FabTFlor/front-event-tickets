import axios from "axios";
import { logoutUser } from "./authApi"; // ‚úÖ Funci√≥n para cerrar sesi√≥n

const API_BASE_URL = "http://localhost:8080/api"; // üìå URL base del backend

// üîπ Crear una instancia de Axios con la base de la API
const axiosInstance = axios.create({
  baseURL: API_BASE_URL,
  headers: {
    "Content-Type": "application/json",
  },
});

// üîπ Interceptor de solicitudes (agrega el token JWT a cada request)
axiosInstance.interceptors.request.use(
  (config) => {
    const token = localStorage.getItem("access_token");
    if (token) {
      config.headers.Authorization = `Bearer ${token}`; // ‚úÖ Se adjunta el token
    }
    return config;
  },
  (error) => Promise.reject(error)
);

// üîπ Interceptor de respuestas (maneja errores de autenticaci√≥n)
axiosInstance.interceptors.response.use(
  (response) => response,
  (error) => {
    if (error.response?.status === 401 || error.response?.status === 403) {
      console.warn("‚ö†Ô∏è Token inv√°lido o expirado. Cerrando sesi√≥n...");
      logoutUser(); // ‚ùå Elimina el token del localStorage
      // No redirigir autom√°ticamente a /login, solo cerrar sesi√≥n.
    }
    return Promise.reject(error);
  }
);

export default axiosInstance;
